pipeline {
  parameters { 
    string(name: 'REGISTRY_URL', defaultValue: 'image-registry.openshift-image-registry.svc:5000/jenkins', description: 'The docker registry to pull the image from')
    string(name: 'AGENT_NAME', defaultValue: 'maven-agent', description: 'The name of the agent as found on the SCM')
    string(name: 'BUILDCONFIG_NAME', defaultValue: 'jenkins-maven-agent', description: 'The buildconfig name to trigger on OCP')
    string(name: 'SERVICE_ACCOUNT', defaultValue: 'ci-jenkins', description: 'Service Account to use when running the agent Pod')
  }

  agent {
    kubernetes {
      label "jenkins-slave-openshift"
      defaultContainer "jnlp"
      yaml k8sAgentPodYaml("${params.SERVICE_ACCOUNT}", "${params.REGISTRY_URL}")
    }
  }

  options {
    timeout(time: 1, unit: 'HOURS')
    timestamps()
  }

  stages {
    stage ("DOCKERFILE LINTING") {
      steps {
        container('hadolint') {
            sh "hadolint --config /tmp/hadolint.yaml containers/${params.AGENT_NAME}/Dockerfile | tee -a ${params.AGENT_NAME}-linting-output.txt"
        }
      }
      post {
          always {
              archiveArtifacts "${params.AGENT_NAME}-linting-output.txt"
          }
      }
    }

    stage ("Start the MAVEN-AGENT BuildConfig on OCP") {
      steps {
        container("jnlp") {
            sh "oc start-build -F ${params.BUILDCONFIG_NAME}"
        }
     }
    }
  }
}

def k8sAgentPodYaml(serviceAccount, registryUrl) {
  openshiftAgent = """
apiVersion: v1
kind: Pod
metadata:
  labels:
    jenkins/kube-default: true
    app: jenkins
    component: agent
spec:
  serviceAccountName: SA_NAME
  automountServiceAccountToken: true
  containers:
    - name: jnlp
      image: URL_PLACEHOLDER/maven-agent:latest
      imagePullPolicy: Always
      env:
      - name: POD_IP
        valueFrom:
          fieldRef:
            fieldPath: status.podIP
      - name: DOCKER_HOST
        value: tcp://localhost:2375
    - name: hadolint
      image: docker.io/hadolint/hadolint:latest-debian
      imagePullPolicy: Always
      command:
        - cat
      tty: true
      volumeMounts:
        - name: hadolint-config
          mountPath: /tmp/hadolint.yaml
          subPath: hadolint.yaml
  volumes:
    - name: hadolint-config
      configMap:
        name: hadolint-config-cm
        items:
        - key: hadolint.yaml
          path: hadolint.yaml
    """

    return openshiftAgent.replaceAll(~/SA_NAME/, serviceAccount).replaceAll(~/URL_PLACEHOLDER/, registryUrl)
}

