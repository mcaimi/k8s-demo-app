---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: nexus-claim
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
  storageClassName: "standard"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nexus
  namespace: jenkins
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nexus
  template:
    metadata:
      labels:
        app: nexus
    spec:
      containers:
      - image: docker.io/sonatype/nexus3:latest
        imagePullPolicy: Always
        name: nexus
        volumeMounts:
          - mountPath: "/nexus-data"
            name: nexus-volume
        ports:
        - containerPort: 8081
          protocol: TCP
        resources:
          limits:
            cpu: "2"
            memory: "4Gi"
          requests:
            memory: "2Gi"
            cpu: "1"
      volumes:
        - name: nexus-volume
          persistentVolumeClaim:
            claimName: nexus-claim
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
---
apiVersion: v1
kind: Service
metadata:
  name: nexus-service
  namespace: jenkins
spec:
  ports:
  - port: 81
    protocol: TCP
    targetPort: 8081
  selector:
    app: nexus
  sessionAffinity: None
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/proxy-body-size: 0m
  name: nexus-route
  namespace: jenkins
spec:
  rules:
  - host: nexus.apps.kubernetes.local
    http:
      paths:
      - pathType: Prefix
        path: "/"
        backend:
          service:
            name: nexus-service
            port:
              number: 81
