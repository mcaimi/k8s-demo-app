pipeline {
  parameters { 
    string(name: 'REGISTRY_URL', defaultValue: 'registry.apps.kubernetes.local', description: 'The docker registry to push the image to') 
    string(name: 'BUILD_TAG', defaultValue: 'latest', description: 'The docker image label to tag the artifact with') 
    string(name: 'BUILD_NAME', defaultValue: 'agent-name', description: 'The name of the docker artifact to build') 
    string(name: 'TLS_VERIFY', defaultValue: 'false', description: 'Validate target registry TLS certificate before pushing image.') 
  }

  agent {
    kubernetes {
      label "jenkins-agent-buildah"
      defaultContainer "jnlp"
      yaml k8sAgentPodYaml()
    }
  }

  options {
    timeout(time: 1, unit: 'HOURS')
    timestamps()
  }

  stages {
    stage ("DOCKERFILE LINTING") {
      steps {
        container('hadolint') {
            sh "hadolint --config /tmp/hadolint.yaml containers/${BUILD_NAME}/Dockerfile | tee -a ${params.BUILD_NAME}-linting-output.txt"
        }
      }
      post {
          always {
              archiveArtifacts "${params.BUILD_NAME}-linting-output.txt"
          }
      }
    }

    stage ("BUILD CONTAINER IMAGE") {
      steps {
        container("jnlp") {
          echo "BUILDING CONTAINER ${params.BUILD_NAME} (${env.BUILD_ID})"
          sh "buildah bud -t ${params.BUILD_NAME}:${params.BUILD_TAG} containers/${BUILD_NAME}"
        }
      }
    }

    stage ("PUSH CONTAINER IMAGE") {
      steps {
        container("jnlp") {
          echo "PUSHING CONTAINER: ${params.REGISTRY_URL}/${params.BUILD_NAME}:${params.BUILD_TAG} (${env.BUILD_ID})"
          sh "buildah push --tls-verify=${params.TLS_VERIFY} localhost/${params.BUILD_NAME}:${params.BUILD_TAG} docker://${params.REGISTRY_URL}/${params.BUILD_NAME}:${params.BUILD_TAG}"
        }
      }
    }
  }
}

def k8sAgentPodYaml() {
  dockerInDockerYaml = """
apiVersion: v1
kind: Pod
metadata:
  labels:
    jenkins/kube-default: true
    app: jenkins
    component: agent
spec:
  containers:
    - name: jnlp
      image: docker.io/mcaimi/jenkins-agent-buildah:jdk8
      imagePullPolicy: Always
      securityContext:
        privileged: True
      env:
      - name: POD_IP
        valueFrom:
          fieldRef:
            fieldPath: status.podIP
    - name: hadolint
      image: docker.io/hadolint/hadolint:latest-debian
      imagePullPolicy: Always
      command:
        - cat
      tty: true
      volumeMounts:
        - name: hadolint-config
          mountPath: /tmp/hadolint.yaml
          subPath: hadolint.yaml
  volumes:
    - name: hadolint-config
      configMap:
        name: hadolint-config-cm
        items:
        - key: hadolint.yaml
          path: hadolint.yaml
  """

    return dockerInDockerYaml
}
